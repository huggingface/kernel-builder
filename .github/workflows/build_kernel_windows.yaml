name: "Build and test kernel - Windows"
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened] # trigger on PRs
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-2022 ]
        python: [ '3.12', '3.13' ]

    name: Build kernel
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/cache@v4
        with:
          key: cuda-toolkit-129-${{ matrix.os }}
          path: |
            C:\Program Files\NVIDIA GPU Computing Toolkit
            ~/.cargo/registry
            ~/.cargo/git

      - uses: actions/checkout@v5

      # CUDA environment setup
      - uses: N-Storm/cuda-toolkit@v0.2.27m
        id: setup-cuda-toolkit
        with:
          cuda: '12.9.1'  # TODO(mfuntowicz): How can we test multiple CUDA versions than align with torch?
      - name: "NVCC checks"
        run: nvcc -V

      # Rust build environment setup
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build build2cmake
        run: ( cd build2cmake && cargo build --release )

      # Python environment setup
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install PyTorch
        run: pip install torch --index-url https://download.pytorch.org/whl/cu129

      - name: Build activation kernel
        run: ( scripts\windows\builder.ps1 -SourceFolder examples/activation -BuildConfig Release -Backend cuda -Build -Force )
#      - name: Copy activation kernel
#        run: cp -rL examples/activation/build activation-kernel

      - name: Build cutlass GEMM kernel
        run: ( scripts\windows\builder.ps1 -SourceFolder examples/cutlass-gemm -BuildConfig Release -Backend cuda -Build -Force )
#      - name: Copy cutlass GEMM kernel
#        run: cp -rL examples/cutlass-gemm/result cutlass-gemm-kernel

      - name: Build relu kernel
        run: ( scripts\windows\builder.ps1 -SourceFolder examples/relu -BuildConfig Release -Backend cuda -Build -Force )
#      - name: Copy relu kernel
#        run: cp -rL examples/relu/result relu-kernel

      - name: Build relu-backprop-compile kernel
        run: ( scripts\windows\builder.ps1 -SourceFolder examples/relu-backprop-compile -BuildConfig Release -Backend cuda -Build -Force  )
#      - name: Copy relu-backprop-compile kernel
#        run: cp -rL examples/relu-backprop-compile/result relu-backprop-compile-kernel

      # Just test that we build with the extra torchVersions argument.
#      - name: Build relu kernel (specific Torch version)
#        run: ( cd examples/relu-specific-torch && nix build . )

      - name: Build silu-and-mul-universal kernel
        run: ( scripts\windows\builder.ps1 -SourceFolder examples/silu-and-mul-universal -BuildConfig Release -Build -Force)